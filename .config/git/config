# last one wins


# aliases
[alias]
    alias = config --includes --get-regexp "^alias"

    # Branching and workflow
    dev = "!f() { git switch -c \"dev/$1\"; }; f"
    fix = "!f() { git switch -c \"fix/$1\"; }; f"
    
    # Commit manipulation
    amend = commit --amend --no-edit --date=now
    fixup = commit --fixup
    squash = rebase --interactive --autosquash
    
    # Stash operations
    pop = stash pop
    
    # Reset operations
    nuke = "!git stash && git reset --hard"
    refocus = "!git stash && git switch $(git config --get init.defaultBranch)"
    
    # Push operations
    pushy = push --force-with-lease
    yolo = pushy --no-verify
    
    # Fetch/update operations
    update = fetch --all --tags --prune --prune-tags
    
    # Log and search
    search = log --oneline --regexp-ignore-case --grep
    lol = log --oneline --decorate --color=always --reverse
    
    # Tools and utilities
    gui = !smerge .
    whoami = config --get user.email

# display and output
[log]
    date = iso # no silly dates please

[status]
    branch = true
    short = true
    showUntrackedFiles = no
    showStash = no

[branch]
    sort = -committerdate

[column]
    ui = auto # testing the vibes of this one

[core]
    pager = cat

# basic settings
[init]
    # no god, no master
    defaultBranch = main

# diff and merge
[diff]
    # Use "patience diff" algorithm when generating patches
    # This algorithm extends the patience algorithm to "support low-occurrence common elements"
    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-codehistogramcode
    algorithm = histogram

[merge]
    # zdiff3 adds original text markers and removes matching lines from conflict regions
    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-mergeconflictStyle
    conflictStyle = zdiff3
    autoStash = true

# workflow settings
# Fetch & pull behavior
[fetch]
    prune = true
    pruneTags = true
    parallel = 0

[pull]
    rebase = true

# Handle rebasing
[rebase]
    autoSquash = true
    autoStash = true
    updateRefs = true

# Remember resolved conflicts
[rerere]
    enabled = true
    autoUpdate = true

# Push behavior
[push]
    autoSetupRemote = true
    default = simple
    negotiate = true

# Commented out settings
# branch.autoSetupRebase = always
# yea, we don't always want to rebase. guess i'm learning nuance

# signing
[gpg]
    format = ssh

[gpg "ssh"]
    program = "/Applications/1Password.app/Contents/MacOS/op-ssh-sign"
    allowedSignersFile = ~/.config/git/allowed_signers

[commit]
    gpgsign = false

# performance
[core]
    compression = 1
    looseCompression = 1 # objects not in a pack file

[pack]
    compression = 9 # objects in a pack file
    threads = 0    # use all available threads

# A packed archive is an efficient way to transfer a set of objects between repositories
# https://git-scm.com/docs/git-pack-objects#_description

# Maximize parallelization for better performance
[checkout]
    workers = 0

[index]
    threads = 0

[grep]
    threads = 0

[submodule]
    fetchJobs = 0

# extensions
# Large files storage
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true

# includes (must be at the end)
# repositories hosted on github 
[includeIf "hasconfig:remote.*.url:git@github.com:*/**"]
    path = ~/.config/git/config.github

# my repos
[includeIf "hasconfig:remote.*.url:git@github.com:medecau/**"]
    path = ~/.config/git/config.mine

# work repos go in hidden
[include]
    path = ~/.config/git/config.hidden
