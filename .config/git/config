# last one wins

# no god, no master
[init]
    defaultBranch = main

[core]
    pager = cat
    compression = 1
    looseCompression = 1  # objects not in a pack file

[pack]
    # A packed archive is an efficient way to transfer a set of objects between two repositories as well as an access efficient archival format.
    # https://git-scm.com/docs/git-pack-objects#_description
    compression = 9

[diff]
    # This algorithm extends the patience algorithm to "support low-occurrence common elements".
    # Use "patience diff" algorithm when generating patches.
    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-codehistogramcode
    algorithm = histogram

[log]
    # no silly dates please
    date = iso

[merge]
    # The default is "merge", which shows a <<<<<<< conflict marker, changes made by one side, a ======= marker, changes made by the other side, and then a >>>>>>> marker.
    # An alternate style, "diff3", adds a ||||||| marker and the original text before the ======= marker. [...]
    # Another alternate style, "zdiff3", is similar to diff3 but removes matching lines on the two sides from the conflict region when those matching lines appear near either the beginning or end of a conflict region.
    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-mergeconflictStyle
    conflictStyle = zdiff3

[status]
    branch = true
    short = true
    showUntrackedFiles = no
    showStash = no


# incoming
[fetch]
    prune = true
    pruneTags = true
    parallel = 0

[branch]
    autoSetupRebase = always

[pull]
    rebase = true

[rerere]
    enabled = true
    autoUpdate = true

[rebase]
    autoSquash = true
    autoStash = true
    updateRefs = true


# outgoing
[push]
    autoSetupRemote = true
    default = simple
    negotiate = true

# large files storage
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true


[alias]
    alias = config --includes --get-regexp "^alias"

    # shortcuts
    dev = "!f() { git switch -c \"dev/$1\"; }; f"
    pop = stash pop
    amend = commit --amend --no-edit --date=now
    fixup = commit --fixup
    squash = rebase --interactive --autosquash
    pushy = push --force-with-lease
    yolo = pushy --no-verify
    
    # fetch branches and tags from all remotes then prune remote tracking branches and tags
    update = fetch --all --tags --prune --prune-tags

    search = log --oneline --regexp-ignore-case --grep
    lol = log --oneline --decorate --color=always --reverse
    recent = branch --sort=-committerdate -v

    # remove all branches that are already merged
    remove-merged-branches = !git branch --merged | egrep -v \"(^\\*|master|main)\" | xargs -r git branch -d
    
    gui = !smerge .

    whoami = config --get user.email

# cargo cult
[checkout]
    workers = 0

[index]
    threads = 0

[grep]
    threads = 0

[pack]
    threads = 0

[submodule]
    fetchJobs = 0

# optional includes

# repositories hostes on github 
[includeIf "hasconfig:remote.*.url:git@github.com:*/**"]
    path = ~/.config/git/config.github

# my repos
[includeIf "hasconfig:remote.*.url:git@github.com:medecau/**"]
    path = ~/.config/git/config.mine

# work repos go in hidden
[include]
    path = ~/.config/git/config.hidden

# gpg
[gpg]
    format = ssh

[gpg "ssh"]
    program = "/Applications/1Password.app/Contents/MacOS/op-ssh-sign"

[commit]
    gpgsign = false

[gpg "ssh"]
    allowedSignersFile = ~/.config/git/allowed_signers